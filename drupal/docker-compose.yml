version: '3'
networks:
   caddy_caddy:
     external: true
volumes:
    db-data:  
services:

  varnish:
    container_name: varnish
    build: .
    volumes:
      - ./default.vcl:/etc/varnish/default.vcl
    depends_on:
      - drupalexamen
    ports:
      - "8081:8080"
    labels:
     - "traefik.enable=true"
     # The domain the service will respond to
     - "traefik.http.routers.varnish.rule=Host(`drupal.pixelar.fun`)"
     # Allow request only from the predefined entry point named "web"
     - "traefik.http.routers.varnish.entrypoints=web"
     - "traefik.http.routers.varnish.entrypoints=websecure"
     - "traefik.http.routers.varnish.service=varnish"
     - "traefik.http.routers.varnish.tls.certresolver=myresolver"
     - "traefik.http.services.varnish.loadbalancer.server.port=8080"
    networks:
       caddy_caddy:

  drupalexamen:
    image: drupal:8-apache
    container_name: drupalexamen
    volumes:
      - /var/www/html/modules
      - /var/www/html/profiles
      - /var/www/html/themes
      # this takes advantage of the feature in Docker that a new anonymous
      # volume (which is what we're creating here) will be initialized with the
      # existing content of the image at the same location
      - /var/www/html/sites
    depends_on:
      - mysql
    expose:
      - 443
    restart: always
    networks:
       caddy_caddy:
    
  mysql:
    image: mysql:8.0
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file: .env
    volumes:
      - db-data:/var/lib/mysql
    networks:
       caddy_caddy:
    
    